<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="线程组-live" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">4</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1513653800000</longProp>
        <longProp name="ThreadGroup.end_time">1513653800000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">多机位推流</stringProp>
      </ThreadGroup>
      <hashTree>
        <org.apache.jmeter.sampler.ApiSampler guiclass="org.apache.jmeter.sampler.gui.ApiSamplerGUI" testclass="org.apache.jmeter.sampler.ApiSampler" testname="HTTP请求-login" enabled="true">
          <stringProp name="TestPlan.comments">账号登陆</stringProp>
          <stringProp name="服务器名称:">${server}</stringProp>
          <stringProp name="路径:">/functions/login</stringProp>
          <elementProp name="ApiSampler.user_defined_variables" elementType="Arguments" guiclass="org.apache.jmeter.sampler.gui.ArgumentsPanel2" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="type" elementType="Argument">
                <stringProp name="Argument.name">type</stringProp>
                <stringProp name="Argument.value">app</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">类型，type=app或iris4g或web(默认为app)；如果是app类型会刷新refreshtoken，以确保单点登录</stringProp>
              </elementProp>
              <elementProp name="username" elementType="Argument">
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">用户注册用到的email\regphone,会优先匹配邮箱，再匹配email；目前按PRD定义，不支持sioeyeid登录。</stringProp>
              </elementProp>
              <elementProp name="password" elementType="Argument">
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">密码,必填（客户端使用md5加密，并转小写）</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="ApiSampler.user_defined_headers" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Content-Type" elementType="Argument">
                <stringProp name="Argument.name">Content-Type</stringProp>
                <stringProp name="Argument.value">application/json</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="X_Sioeye_App_Id" elementType="Argument">
                <stringProp name="Argument.name">X_Sioeye_App_Id</stringProp>
                <stringProp name="Argument.value">usYhGBBKDMiypaKFV8fc3kE4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="X_Sioeye_App_Sign_Key" elementType="Argument">
                <stringProp name="Argument.name">X_Sioeye_App_Sign_Key</stringProp>
                <stringProp name="Argument.value">5f3773d461775804ca2c942f8589f1d6,1476178217671</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="X_Sioeye_App_Production" elementType="Argument">
                <stringProp name="Argument.name">X_Sioeye_App_Production</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="ApiSampler,var.status">true</boolProp>
          <boolProp name="ApiSampler.prop.status">false</boolProp>
          <stringProp name="ApiSampler.var.adds">sessiontoken,objectid</stringProp>
          <boolProp name="ApiSampler.var.sessiontoken">false</boolProp>
        </org.apache.jmeter.sampler.ApiSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-547797305">&quot;success&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <org.apache.jmeter.sampler.ApiSampler guiclass="org.apache.jmeter.sampler.gui.ApiSamplerGUI" testclass="org.apache.jmeter.sampler.ApiSampler" testname="HTTP请求-live_apply" enabled="true">
          <stringProp name="TestPlan.comments">直播申请接口
deviceId	String	设备的Id号
devName	String	设备的名称
390092024352440</stringProp>
          <boolProp name="ApiSampler.var.sessiontoken">true</boolProp>
          <stringProp name="服务器名称:">${server}</stringProp>
          <stringProp name="路径:">/functions/live_apply</stringProp>
          <elementProp name="ApiSampler.user_defined_variables" elementType="Arguments" guiclass="org.apache.jmeter.sampler.gui.ArgumentsPanel2" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="deviceId" elementType="Argument">
                <stringProp name="Argument.name">deviceId</stringProp>
                <stringProp name="Argument.value">${IMEI}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">设备的Id号</stringProp>
              </elementProp>
              <elementProp name="devName" elementType="Argument">
                <stringProp name="Argument.name">devName</stringProp>
                <stringProp name="Argument.value">${NAME}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">设备的名称</stringProp>
              </elementProp>
              <elementProp name="versionType" elementType="Argument">
                <stringProp name="Argument.name">versionType</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">版本状态</stringProp>
              </elementProp>
              <elementProp name="ismute" elementType="Argument">
                <stringProp name="Argument.name">ismute</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">是否静音标识，0非静音 1静音</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="ApiSampler.user_defined_headers" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Content-Type" elementType="Argument">
                <stringProp name="Argument.name">Content-Type</stringProp>
                <stringProp name="Argument.value">application/json</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="X_Sioeye_App_Id" elementType="Argument">
                <stringProp name="Argument.name">X_Sioeye_App_Id</stringProp>
                <stringProp name="Argument.value">usYhGBBKDMiypaKFV8fc3kE4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="X_Sioeye_App_Sign_Key" elementType="Argument">
                <stringProp name="Argument.name">X_Sioeye_App_Sign_Key</stringProp>
                <stringProp name="Argument.value">5f3773d461775804ca2c942f8589f1d6,1476178217671</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="X_Sioeye_App_Production" elementType="Argument">
                <stringProp name="Argument.name">X_Sioeye_App_Production</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="ApiSampler,var.status">true</boolProp>
          <boolProp name="ApiSampler.prop.status">false</boolProp>
          <stringProp name="ApiSampler.var.adds">pushurl,liveid</stringProp>
        </org.apache.jmeter.sampler.ApiSampler>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Java请求-pushRTMP-多机位" enabled="true">
          <stringProp name="TestPlan.comments">开始直播</stringProp>
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="ffmpeg" elementType="Argument">
                <stringProp name="Argument.name">ffmpeg</stringProp>
                <stringProp name="Argument.value">${ffmpeg}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="pushurl" elementType="Argument">
                <stringProp name="Argument.name">pushurl</stringProp>
                <stringProp name="Argument.value">${pushurl}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="videopath" elementType="Argument">
                <stringProp name="Argument.name">videopath</stringProp>
                <stringProp name="Argument.value">${video}/30s.mp4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.java.ffmpeg.PushwithFfmpeg</stringProp>
        </JavaSampler>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2074301280">Push Successful</stringProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Push Successful</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <org.apache.jmeter.sampler.ApiSampler guiclass="org.apache.jmeter.sampler.gui.ApiSamplerGUI" testclass="org.apache.jmeter.sampler.ApiSampler" testname="HTTP请求-live_terminate" enabled="true">
          <stringProp name="TestPlan.comments">直播停止接口</stringProp>
          <boolProp name="ApiSampler.var.sessiontoken">true</boolProp>
          <stringProp name="服务器名称:">${server}</stringProp>
          <stringProp name="路径:">/functions/live_terminate</stringProp>
          <elementProp name="ApiSampler.user_defined_variables" elementType="Arguments" guiclass="org.apache.jmeter.sampler.gui.ArgumentsPanel2" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="liveId" elementType="Argument">
                <stringProp name="Argument.name">liveId</stringProp>
                <stringProp name="Argument.value">${liveId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <stringProp name="Argument.desc">直播的Id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <elementProp name="ApiSampler.user_defined_headers" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Content-Type" elementType="Argument">
                <stringProp name="Argument.name">Content-Type</stringProp>
                <stringProp name="Argument.value">application/json</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="X_Sioeye_App_Id" elementType="Argument">
                <stringProp name="Argument.name">X_Sioeye_App_Id</stringProp>
                <stringProp name="Argument.value">usYhGBBKDMiypaKFV8fc3kE4</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="X_Sioeye_App_Sign_Key" elementType="Argument">
                <stringProp name="Argument.name">X_Sioeye_App_Sign_Key</stringProp>
                <stringProp name="Argument.value">5f3773d461775804ca2c942f8589f1d6,1476178217671</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="X_Sioeye_App_Production" elementType="Argument">
                <stringProp name="Argument.name">X_Sioeye_App_Production</stringProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="ApiSampler,var.status">true</boolProp>
          <boolProp name="ApiSampler.prop.status">false</boolProp>
          <stringProp name="ApiSampler.var.adds"></stringProp>
        </org.apache.jmeter.sampler.ApiSampler>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器-2秒" enabled="true">
          <stringProp name="ConstantTimer.delay">2000</stringProp>
        </ConstantTimer>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Devices" enabled="true">
          <stringProp name="TestPlan.comments">camera</stringProp>
          <stringProp name="filename">${camera}</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">IMEI,NAME</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">${__getConfiguration(${__getEnv(JMETER_HOME)}/data/account.properties  ,username)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">测试账号用户名</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">${__MD5(${__getConfiguration(${__getEnv(JMETER_HOME)}/data/account.properties ,password)},)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">测试账号密码</stringProp>
          </elementProp>
          <elementProp name="email" elementType="Argument">
            <stringProp name="Argument.name">email</stringProp>
            <stringProp name="Argument.value">${__getConfiguration(${__getEnv(JMETER_HOME)}/data/account.properties  ,email)}</stringProp>
            <stringProp name="Argument.desc">测试账号邮箱</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ffmpeg" elementType="Argument">
            <stringProp name="Argument.name">ffmpeg</stringProp>
            <stringProp name="Argument.value">${__getConfiguration(${__getEnv(JMETER_HOME)}/data/config.properties  ,ffmpeg)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="video" elementType="Argument">
            <stringProp name="Argument.name">video</stringProp>
            <stringProp name="Argument.value">${__getEnv(JMETER_HOME)}/data/video</stringProp>
            <stringProp name="Argument.desc">测试账号邮箱</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="camera" elementType="Argument">
            <stringProp name="Argument.name">camera</stringProp>
            <stringProp name="Argument.value">${__getEnv(JMETER_HOME)}/data/camera.txt</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">${__getConfiguration(${__getEnv(JMETER_HOME)}/data/config.properties  ,server)}</stringProp>
            <stringProp name="Argument.desc">服务器名称</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
